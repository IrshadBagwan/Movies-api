{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\My react project\\\\002 01-starting-project (2)\\\\01-starting-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setmovies] = useState([]);\n  const [isloading, setisloading] = useState(false);\n  const [error, seterror] = useState(null);\n  const [retrycount, setretrycount] = useState(0);\n  const [cancel, setCancel] = useState(false);\n  const fetchMoviesHandler = async () => {\n    setisloading(true);\n    seterror(null);\n    const maxRetries = 3;\n    const retryInterval = 5000;\n    try {\n      const response = await fetch(\"https://swapi.dev/api/films/\");\n      if (!response.ok) {\n        throw new Error(\"Something went Wrong .....Retrying\");\n      }\n      const data = await response.json();\n      const transformedMovies = data.results.map(moviedata => {\n        return {\n          id: moviedata.episode_id,\n          title: moviedata.title,\n          openingText: moviedata.opening_crawl,\n          releaseDate: moviedata.release_date\n        };\n      });\n      setmovies(transformedMovies);\n    } catch (error) {\n      seterror(error.message);\n      if (retrycount < maxRetries) {\n        setretrycount(retrycount + 1);\n        setTimeout(fetchMoviesHandler, retryInterval);\n      } else {\n        seterror(new Error('Api request failed after multiple requests'));\n      }\n    }\n    setisloading(false);\n  };\n  const handleCancel = () => {\n    setCancel(true);\n  };\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isloading && movies.length > 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 45\n      }, this), !isloading && movies.length === 0 && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"found not movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 57\n      }, this), !isloading && error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 33\n      }, this), isloading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3xoK0DanDl4qDQsP2Bd1N52IDok=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","movies","setmovies","isloading","setisloading","error","seterror","retrycount","setretrycount","cancel","setCancel","fetchMoviesHandler","maxRetries","retryInterval","response","fetch","ok","Error","data","json","transformedMovies","results","map","moviedata","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","setTimeout","handleCancel","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/My react project/002 01-starting-project (2)/01-starting-project/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n \n\n  const [movies, setmovies] = useState([]);\n  const [isloading, setisloading] = useState(false);\n  const [error, seterror] = useState(null);\n  const [retrycount,setretrycount] = useState(0);\n  const [cancel,setCancel] = useState(false);\n\n\n\n   const fetchMoviesHandler= async ()=> {\n    setisloading(true);\n    seterror(null);\n\n    const maxRetries = 3;\n    const retryInterval = 5000;\n   \n    try {\n      const response = await fetch(\"https://swapi.dev/api/films/\");\n  \n \n\n      if (!response.ok) {\n        throw new Error(\"Something went Wrong .....Retrying\");\n      }\n\n      const data = await response.json();\n\n      const transformedMovies = data.results.map((moviedata) => {\n        return {\n          id: moviedata.episode_id,\n          title: moviedata.title,\n          openingText: moviedata.opening_crawl,\n          releaseDate: moviedata.release_date,\n        };\n      });\n      setmovies(transformedMovies);\n    \n    } catch (error) {\n      seterror(error.message);\n      if(retrycount < maxRetries){\n        setretrycount(retrycount+1);\n        setTimeout(fetchMoviesHandler, retryInterval);\n          \n       \n      }else{\n        seterror(new Error('Api request failed after multiple requests'));\n      }\n    }\n\n    setisloading(false);\n  }\n\n  const handleCancel = ()=>{\n    setCancel(true);\n  }\n\n\n  useEffect(()=>{\n    fetchMoviesHandler();\n  },[fetchMoviesHandler])\n \n  \n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isloading && movies.length > 0 && <MoviesList movies={movies} />}\n        {!isloading && movies.length === 0 && !error && <p>found not movies</p>}\n        {!isloading && error && <p>{error}</p>}\n        \n        {isloading && <p>Loading....</p>}\n        <button onClick={handleCancel}>Cancel</button>\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}